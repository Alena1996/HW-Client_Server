1) Прочиать про клиент-серверную архитект
2) Что ткое HTTP и HTTPS
HTTP(от англ. HyperText Transfer Protocol) это не защищенный протокол для передачи данных в интерете.С его помощью браузер получает информацию от сервера и передает ее клиенту.
HTTPS(от англ. HyperText Transfer Protocol Secure) это тот же протокол HTTP, но с защищенным SSL-сертификатом.
3) HTTP методы
Это определенное слово, которое мы говорим серверу и он таким образом определяет что ему нужно делать.
GET — используется, когда мы хотим получить какие-то данные с сервера.
Например, получить определенное изображение или страницу. 
POST — используется, когда нам нужно создать новый объект или внести какиелибо изменения. Например, когда регистрируемся передаем данные о том, что нужно сделать новый аккаунт с определенным именем и другими параметрами.
PUT — используется, если нам надо внести изменения в существующий объект.
DELETE — используется, когда нужно удалить объекты или сущности. 
4) HTTP статус коды сервера
Коды состояний принято делить по классам. В настоящее время выделено 5
классов кодов состояния:
1хх — Информационный. Информирует о процессе передачи данных.
2хх — Успех. Информирует о том, что запрос успешно выполнен.
3хх — Перенаправление. Информирует о том, что для успешного выполнения необходимо сделать другой запрос (request url).
4xx — Ошибка клиента. Информирует, что со стороны клиента есть ошибка.
5хх — Ошибка сервера. Информирует, что операция была выполнена неудачно из-за сервера.
5) Что такое ядро браузера 
Ядро браузера можно разделить на две части: движок рендеринга (инженер макета или движок рендеринга) и движок JS. 
Он отвечает за получение содержимого веб-страницы (HTML, XML, изображения и т. Д.), Организацию информации (например, добавление CSS и т. Д.)
Движок JS анализирует язык Javascript и выполняет язык Javascript для достижения динамических эффектов веб-страницы.
6) Какие браузеры какиие ядра используют
Blink — движок браузера Chromium, браузера Google Chrome с 28 версии, Microsoft Edge с 79 версии, Opera c 15 версии и Vivaldi. Он является ответвлением WebKit.
Gecko — открытый движок проекта Mozilla; используется в большом числе программ, основанных на коде Mozilla (браузере Firefox, почтовом клиенте Thunderbird, наборе программ SeaMonkey).
WebKit — движок для браузера Apple Safari, включенного в операционную систему Mac OS X, и браузера Google Chrome (до 2013 года). Встроен в библиотеку Qt (Начиная с Qt 5.6 признан устаревшим).
KHTML — разработан в рамках проекта KDE, используется в браузере Konqueror и послужил основой для WebKit.
7)Что такое API
API – это механизмы, которые позволяют двум программным компонентам взаимодействовать друг с другом, используя набор определений и протоколов.
8) Что такое ендпоинты
Эндпоинт (в переводе с англ. — конечная точка) представляет собой некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом. 
Простыми словами, это адрес, на который отправляются сообщения.
9) URL (URI, URL, URN)
URL — это URI, который, помимо идентификации ресурса, предоставляет ещё и информацию о местонахождении этого ресурса.
URN — это URI, который только идентифицирует ресурс в определённом пространстве имён (и, соответственно, в определённом контексте), но не указывает его местонахождение.
10) Идемпотентные HTTP методы
Метод HTTP является идемпотентным, если повторный идентичный запрос, сделанный один или несколько раз подряд, имеет один и тот же эффект, не изменяющий состояние сервера. 
Другими словами, идемпотентный метод не должен иметь никаких побочных эффектов (side-effects), кроме сбора статистики или подобных операций.
11) Безопасные HTTP методы
Метод HTTP является безопасным , если он не изменяет состояние сервера.
Другими словами, безопасный метод использует операцию "только чтение" (только для чтения). 
Несколько методов защиты HTTP: GET, HEADили OPTIONS. 
Все безопасные методы являются также идемпотентными другими , такими как некоторые и, но при этом небезопасными, такими как PUTили DELETE.
12) Иденфикация, Аутентификация, Авторизация
Идентификация — процесс распознавания пользователя по его идентификатору.
Аутентификация — процедура проверки подлинности, доказательство что пользователь именно тот, за кого себя выдает.
Авторизация — предоставление определённых прав
13) Что такое IP
IP-адрес (от англ. Internet Protocol) — уникальный числовой идентификатор устройства в компьютерной сети, работающей по протоколу IP.
14) Что такое октаты в DNS
eader — Заголовок DNS пакета, состоящий из 12 октет.

Question section — в этой секции DNS-клиент передает запросы DNS-серверу сообщая о том, для какого имени необходимо разрешить (зарезолвить) запись DNS, а также какого типа (NS, A, TXT и т.д.). Сервер при ответе, копирует эту информацию и отдает клиенту обратно в этой же секции.

Answer section — сервер сообщает клиенту ответ или несколько ответов на запрос, в котором сообщает вышеуказанные данные.

Authoritative Section — содержит сведения о том, с помощью каких авторитетных серверов было получена информация включенная в секцию DNS-ответа.

Additional Record Section — дополнительные записи, которые относятся к запросу, но не являются строго ответами на вопрос.

Записей в секциях может быть как несколько, так и не быть вообще. Всё определяется заголовком.
15) Что такое порт, сколько портов у Linux сервера
Порт (англ. port) — целое неотрицательное число, записываемое в заголовках протоколов транспортного уровня сетевой модели OSI (TCP, UDP, SCTP, DCCP).
Как узнать порт сервера Linux?
1) Посмотреть открытые порты с помощью команды ss

Команда Linux ss предоставляет подробную информацию об открытых портах и прослушиваемых сокетах. Она извлекает информацию из ядра Linux и она более популярна, чем команда netstat, которая уже устарела. u — означает порт UDP.
16) Уровни OSI
1 уровень. Физический (physical). Единицей нагрузки (PDU) здесь является бит. Кроме единиц и нулей физический уровень не знает ничего. На этом уровне работают провода, патч панели, сетевые концентраторы (хабы, которые сейчас уже сложно найти в привычных нам сетях), сетевые адаптеры. Именно сетевые адаптеры и ничего более из компьютера. Сам сетевой адаптер принимает последовательность бит и передает её дальше.
2 уровень. Канальный (data link). PDU - кадр (frame). На этом уровне появляется адресация. Адресом является MAC адрес. Канальный уровень ответственен за доставку кадров адресату и их целостность. В привычных нам сетях на канальном уровне работает протокол ARP. Адресация второго уровня работает только в пределах одного сетевого сегмента и ничего не знает о маршрутизации - этим занимается вышестоящий уровень. Соответственно, устройства, работающие на L2 - коммутаторы, мосты и драйвер сетевого адаптера.
3 уровень. Сетевой (network). PDU пакет (packet). Наиболее распространенным протоколом (дальше не буду говорить про “наиболее распространенный” - статья для новичков и с экзотикой они, как правило,  не сталкиваются) тут является IP. Адресация происходит по IP-адресам, которые состоят из 32 битов. Протокол маршрутизируемый, то есть пакет способен попасть в любую часть сети через какое-то количество маршрутизаторов. На L3 работают маршрутизаторы.
4 уровень. Транспортный (transport). PDU сегмент (segment)/датаграмма (datagram). На этом уровне появляются понятия портов. Тут трудятся TCP и UDP. Протоколы этого уровня отвечают за прямую связь между приложениями и за надежность доставки информации. Например, TCP умеет запрашивать повтор передачи данных в случае, если данные приняты неверно или не все. Так же TCP может менять скорость передачи данных, если сторона приема не успевает принять всё (TCP Window Size).
Следующие уровни “правильно” реализованы лишь в RFC. На практике же, протоколы описанные на следующих уровнях работают одновременно на нескольких уровнях модели OSI, поэтому нет четкого разделения на сеансовый и представительский уровни. В связи с этим в настоящее время основным используемым стеком является TCP/IP, о котором поговорим чуть ниже.
5 уровень. Сеансовый (session). PDU данные (data). Управляет сеансом связи, обменом информации, правами. Протоколы - L2TP, PPTP.
6 уровень. Представительский (presentation). PDU данные (data). Преставление и шифрование данных. JPEG, ASCII, MPEG.
7 уровень. Прикладной (application). PDU данные (data). Самый многочисленный и разнообразный уровень. На нем выполняются все высокоуровненвые протоколы. Такие как POP, SMTP, RDP, HTTP и т.д. Протоколы здесь не должны задумываться о маршрутизации или гарантии доставки информации - этим занимаются нижестоящие уровни. На 7 уровне необходима лишь реализации конкретных действий, например получение html-кода или email-сообщения конкретному адресату.
17) Хедеры http запросов
General Headers (рус. Общие заголовки) — используются в запросах и ответах.
Request Headers (рус. Заголовки запроса) — используются только в запросах.
Response Headers (рус. Заголовки ответа) — используются только в ответах.
Entity Headers (рус. Заголовки сущности) — сопровождают каждую сущность сообщения. Используются в запросах и ответах.

